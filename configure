#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BIT="$(uname -m | grep '64')"

cd "$DIR"

echo "Checking xz utils"
(xz --version) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "xz utils not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking zip utils"
(xz --version) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "zip utils not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking 7za utils"
(7za) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "7za utils not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking mono-runtime"
(mono --version) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "mono CLR not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking mono compiler (xbuild)"
(xbuild /version) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "mono compiler (xbuild) not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking mono compiler (msbuild)"
(msbuild /version) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "mono compiler (msbuild) not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking git"
(git --version) < /dev/null > /dev/null 2>&1 || {
	echo
	echo "git not detected!"
	echo
	sleep 3
	exit 1
}

echo "Checking Newtonsoft.Json at ../"
if [ -f "../Newtonsoft.Json/Src/Newtonsoft.Json/Newtonsoft.Json.Net40.csproj" ]; then
	echo "    Newtonsoft.Json found!"
	sleep 1
else
	echo "    Newtonsoft.Json not found, downloading..."
	git clone https://github.com/JamesNK/Newtonsoft.Json "../Newtonsoft.Json"
	cd "../Newtonsoft.Json"
	git checkout 10.0.2
	cd "$DIR"
fi

echo "Checking FFmpegDotNet at ../"
if [ -f "../FFmpegDotNet/FFmpegDotNet/FFmpegDotNet.csproj" ]; then
	echo "    FFmpegDotNet found!"
	sleep 1
else
	echo "    FFmpegDotNet not found, downloading..."
	git clone https://github.com/Anime4000/FFmpegDotNet "../FFmpegDotNet"
fi

echo "Download necessary stuff"
mkdir bin
wget --no-check-certificate https://sourceforge.net/projects/ifme/files/stuff/FontReg32.exe -O ./bin/FontReg32.exe
wget --no-check-certificate https://sourceforge.net/projects/ifme/files/stuff/FontReg64.exe -O ./bin/FontReg64.exe

echo "Checking plugin archive"
if [ -f "plugin32.tar.xz" ]; then
	echo "    32-bit Plugins found!"
	sleep 1
else
	wget --no-check-certificate https://sourceforge.net/projects/ifme/files/plugin/plugin-basic_2017-12-12_i686.tar.xz -O plugin32.tar.xz
fi

if [ -f "plugin64.tar.xz" ]; then
	echo "    64-bit Plugins found!"
	sleep 1
else
	wget --no-check-certificate https://sourceforge.net/projects/ifme/files/plugin/plugin-basic_2017-12-12_amd64.tar.xz -O plugin64.tar.xz
fi


echo "Done, now you can make"
exit 0

exit 1